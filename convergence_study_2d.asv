%% initialize
clear all; close all; clc;
addpath('src','mex');

% parameters
Tmax = 1.0;         % Maximum time to simulate
flag_mex = true;    % flag to do quadrature loop in C

% get problem specs
alpha = 0.0;        % parameter in [0,1] that induces nonlinearity in the mappmethoding
kwave = 4;              % wavenumber in space.
lambda = 4;         % wavenumber in time.
kappa = 1;          % material diffusion coefficient
problem = benchmark_1_2d(kwave, lambda, kappa, alpha);

%% get discretization and time integrator

NE = [32, 64, 128, 256];
P = [5];
Methods = {'standard', 'standard';'standard', 'lumped'; 'weighted', 'dual'};

l2e = zeros(length(NE),length(Methods), length(P)); time = zeros(length(NE),length(Methods), length(P));

% loop over discretization approaches
for k=1:length(P)
    % polynomial degree
    p = P(k);
    
    for j=1:size(Methods, 1)
        
        product = Methods{j, 1};
        method  = Methods{j, 2};
    
        % loop over elements
        i = 1;
        for ne = NE
        
            % print case
            fprintf('case: %s-%s, p = %d, n_e = %d\n', method, product, p, ne);
        
            % measure runtime
            tic;
                % get discretization object
                [discretization, integrator] = get_discretization_2d(problem, p, [ne,ne], Tmax, method, product, flag_mex);
                
                % Runge-Kutta time integration
                discretization = solve_2d(problem, discretization, integrator, flag_mex);
            time(i, j, k) = toc;
        
            % compute relative l2 error
            l2e(i, j, k) = evaluate_l2error_2d(discretization, @(x,y) problem.solution.displacement(x,y,Tmax), "relative");
            i = i + 1;
        end
    end
end

%% postprocessing
close all; clc;
fontsize = 16;

% Create figure and axis
figure1 = figure;

axes1 = axes('Parent',figure1); hold(axes1,'on');
loglog1 = plot(NE, l2e,'Marker','o','LineWidth',2,'Parent',axes1);
createtriangle(75, 10^-7.8, 4, 0.2, 'b');
createtriangle(75, 10^-2.3, 2, 0.2, 'r');
set(loglog1(1),'DisplayName','consistent mass','MarkerFaceColor',[0 0 0],...
    'Color',[0 0 0]);
set(loglog1(3),'DisplayName','dual lumping','MarkerFaceColor',[0 0 1],...
    'Color',[0 0 1]);
set(loglog1(2),'DisplayName','row-sum lumping','MarkerFaceColor',[1 0 0],...
    'Color',[1 0 0]);

ylim([1e-12,1e-0]);
ylabel('L2-error','FontSize',fontsize);
xlabel('n_e','FontSize',fontsize);

box(axes1,'on');
hold(axes1,'off');
% Set the remaining axes properties
set(axes1,'FontSize',14,'XMinorTick','on','XScale','log','XTick',NE,...
    'YMinorTick','off','YScale','log');
% Create legend
legend1 = legend(axes1,'show');
set(legend1,'Location','southwest','FontSize',fontsize);


figure2 = figure; 
axes2 = axes('Parent',figure2); hold(axes2,'on');
loglog2 = loglog(NE, time, '-o', 'LineWidth', 2,'Parent',axes2);
xlabel('n_e','FontSize',fontsize); ylabel('time','FontSize',fontsize); xticks(NE);
set(loglog2(1),'DisplayName','consistent mass','MarkerFaceColor',[0 0 0],...
    'Color',[0 0 0]);
set(loglog2(3),'DisplayName','dual lumping','MarkerFaceColor',[0 0 1],...
    'Color',[0 0 1]);
set(loglog2(2),'DisplayName','row-sum lumping','MarkerFaceColor',[1 0 0],...
    'Color',[1 0 0]);
% Set the remaining axes properties
set(axes2,'FontSize',14,'XMinorTick','on','XScale','log','XTick',NE,...
    'YMinorTick','off','YScale','log');
% Create legend
box(axes2,'on');
hold(axes2,'off');
legend2 = legend(axes2,'show');
set(legend2,'Location','southeast','FontSize',fontsize);


figure3 = figure; 
axes3 = axes('Parent',figure3); hold(axes3,'on');
loglog3 = loglog(time, l2e, '-o', 'LineWidth', 2,'Parent',axes3);
ylabel('L2-error','FontSize',fontsize); xlabel('time','FontSize',fontsize);
set(loglog3(1),'DisplayName','consistent mass','MarkerFaceColor',[0 0 0],...
    'Color',[0 0 0]);
set(loglog3(3),'DisplayName','dual lumping','MarkerFaceColor',[0 0 1],...
    'Color',[0 0 1]);
set(loglog3(2),'DisplayName','row-sum lumping','MarkerFaceColor',[1 0 0],...
    'Color',[1 0 0]);
% Set the remaining axes properties
set(axes3,'FontSize',14,'XMinorTick','on','XScale','log',...
    'YMinorTick','off','YScale','log');
ylim([1e-12,1e-0]);
% Create legend
box(axes3,'on');
hold(axes3,'off');
legend3 = legend(axes3,'show');
set(legend3,'Location','southwest','FontSize',fontsize);

% save data
filename = sprintf('study-2d-p%d-alpha%d-lambda%d-k%d', p, 10*alpha, lambda, kwave);
save(filename, "NE","time","l2e");